doctype html
html
	head
		block topheader
		include ./header.pug
		include ./datatables.pug

		- if (typeof sortColumn === "undefined") {
		-	sortColumn = 0;
		- }
		- if (typeof sortDirection === "undefined") {
		-	sortDirection = "asc";
		- }
		- if (typeof specificFiltering === "undefined") {
		-	specificFiltering = false;
		- }
		- if (typeof head === "undefined") {
		-    head = [];
		- }
		- if (typeof deferRender === "undefined") {
		-    deferRender = false;
		- }

		- if (typeof extraScript !== "undefined") {
			script.
				!{extraScript}
		- }
		- if (typeof extraCSS !== "undefined") {
			style(type="text/css").
				!{extraCSS}
		- }

		script.
			$(document).ready(() => {
				if (typeof beforeTableInitalize === "function") {
					beforeTableInitalize();
				}

				const columnValues = JSON.parse(`!{JSON.stringify(columnValues)}`);
				const table = $("#table").DataTable({
					lengthMenu: [10, 25, 50, 100, 250, 500, 1000],
					pageLength: #{pageLength},
					order: [#{sortColumn}, "#{sortDirection}"],
					deferRender: #{deferRender}
				});

				if (#{specificFiltering}) {
					$("td.searchFooter").each(function (i) {
						const position = Number($(this).attr("position"));
						const title = $(this).attr("name");
						const column = columnValues.find(value => value.title === title || value.position === position);
						const value = (column && column.value) || null

						$(this).html(`<input type="text" placeholder="ðŸ”Ž ${title}">`);

						$("input", this).on("keyup change", function () {
							if (table.column(i).search() !== this.value) {
								table.column(i).search(this.value, true).draw();
							}
						});

						if (value) {
							const input = $(this).children("input").first();
							input.val(value);
							input.trigger("change");
						}
					});
				}
			});
		meta(charset="UTF-8")
		style(type="text/css").
			.searchable {
				display: none;
			}

			td.searchFooter > input {
				width: 100%;
				max-width: 100%;
				min-width: 50px;
			}

			td a {
				display: block;
			}

			td {
				word-break: break-word;
			}

			#table_wrapper {
				padding: 10px 40px 0 40px !important;
			}

		include ./navigation.pug
	body
		block navigation
		table(id="table", class="table table-striped table-bordered")
			thead
				tr
					each key in head
						th #{key}
			each row in data
				tr
					each key in head
						- if (row[key] && typeof row[key].dataOrder !== "undefined") {
							td(data-order=row[key].dataOrder field=key) !{row[key].value}
						- }
						- else {
							td(field=key) !{row[key]}
						- }

			- if (specificFiltering) {
				tfoot
					tr
					- var index = 0;
						each key in head
							td(class="searchFooter" name=key position=index)
							- index++;
			- }